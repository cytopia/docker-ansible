---

# -------------------------------------------------------------------------------------------------
# Job Name
# -------------------------------------------------------------------------------------------------
name: build


# -------------------------------------------------------------------------------------------------
# When to run
# -------------------------------------------------------------------------------------------------
on:
  # Runs on Pull Requests
  pull_request:
  # Runs on Push
  push:
    branches:
      - master
    tags:
      - '*'


# -------------------------------------------------------------------------------------------------
# What to run
# -------------------------------------------------------------------------------------------------
jobs:
  build:
    name: "[ Ansible ]"
    runs-on: ubuntu-latest
    steps:

      # ------------------------------------------------------------
      # Setup repository
      # ------------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set variables
        id: vars
        run: |

          # Retrieve git info (tags, etc)
          git fetch --all

          # Branch, Tag or Commit
          GIT_TYPE="$( \
            curl -sS https://raw.githubusercontent.com/cytopia/git-tools/master/git-info.sh \
            | sh \
            | grep '^GIT_TYPE' \
            | sed 's|.*=||g' \
          )"
          # Branch name, Tag name or Commit Hash
          GIT_SLUG="$( \
            curl -sS https://raw.githubusercontent.com/cytopia/git-tools/master/git-info.sh \
            | sh \
            | grep '^GIT_NAME' \
            | sed 's|.*=||g' \
          )"

          # Output
          echo "GIT_TYPE=${GIT_TYPE}"
          echo "GIT_SLUG=${GIT_SLUG}"
          echo "DOCKER_TAG_BASE=${DOCKER_TAG_BASE}"
          echo "DOCKER_TAG_TOOLS=${DOCKER_TAG_TOOLS}"
          echo "DOCKER_TAG_INFRA=${DOCKER_TAG_INFRA}"
          echo "DOCKER_TAG_AZURE=${DOCKER_TAG_AZURE}"
          echo "DOCKER_TAG_AWS=${DOCKER_TAG_AWS}"
          echo "DOCKER_TAG_AWSK8S=${DOCKER_TAG_AWSK8S}"

      - name: Setup docker buildx with cache
        run: |
          docker buildx inspect
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      # ------------------------------------------------------------
      # Builder
      # ------------------------------------------------------------
      - name: Build Builder Image
        run: |
          scripts/retry make _build_builder

      - name: Build Images
        run: |
          docker buildx bake --load --set *.cache-from=type=gha --set=*.cache-to=type=gha,mode=max

      # ------------------------------------------------------------
      # Base
      # ------------------------------------------------------------
      - name: Test Ansible Base
        run: |
          ANSIBLE_VERSIONS="2.5 2.6 2.7 2.8 2.9 2.10 2.11 latest"
          for VERSION in $ANSIBLE_VERSIONS ; do
          scripts/retry make test ANSIBLE=${VERSION} FLAVOUR=base
          done


      # ------------------------------------------------------------
      # Tools
      # ------------------------------------------------------------
      - name: Test Ansible Tools
        run: |
          ANSIBLE_VERSIONS="2.5 2.6 2.7 2.8 2.9 2.10 2.11 latest"
          for VERSION in $ANSIBLE_VERSIONS ; do
          scripts/retry make test ANSIBLE=${VERSION} FLAVOUR=tools
          done


      # ------------------------------------------------------------
      # Infra
      # ------------------------------------------------------------
      - name: Test Ansible Infra
        run: |
          ANSIBLE_VERSIONS="2.5 2.6 2.7 2.8 2.9 2.10 2.11 latest"
          for VERSION in $ANSIBLE_VERSIONS ; do
          scripts/retry make test ANSIBLE=${VERSION} FLAVOUR=infra
          done


      # ------------------------------------------------------------
      # Azure
      # ------------------------------------------------------------
      - name: Test Ansible Azure
        run: |
          ANSIBLE_VERSIONS="2.5 2.6 2.7 2.8 2.9 2.10 2.11 latest"
          for VERSION in $ANSIBLE_VERSIONS ; do
          scripts/retry make test ANSIBLE=${VERSION} FLAVOUR=azure
          done


      # ------------------------------------------------------------
      # AWS
      # ------------------------------------------------------------
      - name: Test Ansible AWS
        run: |
          ANSIBLE_VERSIONS="2.5 2.6 2.7 2.8 2.9 2.10 2.11 latest"
          for VERSION in $ANSIBLE_VERSIONS ; do
          scripts/retry make test ANSIBLE=${VERSION} FLAVOUR=aws
          done


      # ------------------------------------------------------------
      # AWS K8s
      # ------------------------------------------------------------
      - name: Test Ansible AWS K8s
        run: |
          ANSIBLE_VERSIONS="2.5 2.6 2.7 2.8 2.9 2.10 2.11 latest"
          for VERSION in $ANSIBLE_VERSIONS ; do
          scripts/retry make test ANSIBLE=${VERSION} FLAVOUR=awsk8s
          done


      # ------------------------------------------------------------
      # Deploy
      # ------------------------------------------------------------
      - name: Publish images (only repo owner)
        run: |

          # Output
          echo "GIT_TYPE=${GIT_TYPE}"
          echo "GIT_SLUG=${GIT_SLUG}"
          echo "DOCKER_TAG_BASE=${DOCKER_TAG_BASE}"
          echo "DOCKER_TAG_TOOLS=${DOCKER_TAG_TOOLS}"
          echo "DOCKER_TAG_INFRA=${DOCKER_TAG_INFRA}"
          echo "DOCKER_TAG_AZURE=${DOCKER_TAG_AZURE}"
          echo "DOCKER_TAG_AWS=${DOCKER_TAG_AWS}"
          echo "DOCKER_TAG_AWSK8S=${DOCKER_TAG_AWSK8S}"

          # Login
          scripts/retry make login USERNAME=${{ secrets.DOCKERHUB_USERNAME }} PASSWORD=${{ secrets.DOCKERHUB_PASSWORD }}

          ANSIBLE_VERSIONS="2.5 2.6 2.7 2.8 2.9 2.10 2.11 latest"
          for VERSION in $ANSIBLE_VERSIONS ; do

          # Tag image
          scripts/retry make tag ANSIBLE=${VERSION} FLAVOUR=base   TAG=${DOCKER_TAG_BASE}
          scripts/retry make tag ANSIBLE=${VERSION} FLAVOUR=tools  TAG=${DOCKER_TAG_TOOLS}
          scripts/retry make tag ANSIBLE=${VERSION} FLAVOUR=infra  TAG=${DOCKER_TAG_INFRA}
          scripts/retry make tag ANSIBLE=${VERSION} FLAVOUR=azure  TAG=${DOCKER_TAG_AZURE}
          scripts/retry make tag ANSIBLE=${VERSION} FLAVOUR=aws    TAG=${DOCKER_TAG_AWS}
          scripts/retry make tag ANSIBLE=${VERSION} FLAVOUR=awsk8s TAG=${DOCKER_TAG_AWSK8S}
          docker images | grep cytopia/ansible

          # Push
          scripts/retry make push TAG=${DOCKER_TAG_BASE}
          scripts/retry make push TAG=${DOCKER_TAG_TOOLS}
          scripts/retry make push TAG=${DOCKER_TAG_INFRA}
          scripts/retry make push TAG=${DOCKER_TAG_AZURE}
          scripts/retry make push TAG=${DOCKER_TAG_AWS}
          scripts/retry make push TAG=${DOCKER_TAG_AWSK8S}

          done
        # https://help.github.com/en/github/automating-your-workflow-with-github-actions/contexts-and-expression-syntax-for-github-actions#functions
        if: github.event.pull_request.base.repo.id == github.event.pull_request.head.repo.id
            && (
              (github.event_name == 'schedule' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')))
              ||
              (github.event_name == 'push'     && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')))
              ||
              (github.event_name == 'push'     && startsWith(github.ref, 'refs/heads/release-'))
            )
