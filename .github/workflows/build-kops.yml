---

# -------------------------------------------------------------------------------------------------
# Job Name
# -------------------------------------------------------------------------------------------------
name: build-kops


# -------------------------------------------------------------------------------------------------
# When to run
# -------------------------------------------------------------------------------------------------
on:
  # Runs on Pull Requests
  pull_request:
  # Runs on Push
  push:
    branches:
      - master
    tags:
      - '*'


# -------------------------------------------------------------------------------------------------
# What to run
# -------------------------------------------------------------------------------------------------
jobs:
  build_kops:
    name: "[ Ansible-${{ matrix.version }} (kops-${{ matrix.kops }}) ${{ matrix.platform }} ]"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: False
      matrix:
        version:
          - '2.5'
          - '2.6'
          - '2.7'
          - '2.8'
          - '2.9'
          - '2.10'
          - 'latest'
        kops:
          - "1.8"
          - "1.9"
          - "1.10"
          - "1.11"
          - "1.12"
          - "1.13"
          - "1.14"
          - "1.15"
          - "1.16"
          - "1.17"
          - "1.18"
          - "1.19"
          - "1.20"
        platform:
          - amd64
          - arm64v8
        exclude:
          - platform: arm64v8
            kops: "1.8"
          - platform: arm64v8
            kops: "1.9"
          - platform: arm64v8
            kops: "1.10"
          - platform: arm64v8
            kops: "1.11"
          - platform: arm64v8
            kops: "1.12"
          - platform: arm64v8
            kops: "1.13"
          - platform: arm64v8
            kops: "1.14"
          - platform: arm64v8
            kops: "1.15"
          - platform: arm64v8
            kops: "1.16"
          - platform: arm64v8
            kops: "1.17"
          - platform: arm64v8
            kops: "1.18"
    steps:

      # ------------------------------------------------------------
      # Setup repository
      # ------------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set variables
        id: vars
        run: |

          # Retrieve git info (tags, etc)
          git fetch --all

          # Branch, Tag or Commit
          GIT_TYPE="$( \
            curl -sS https://raw.githubusercontent.com/cytopia/git-tools/master/git-info.sh \
            | sh \
            | grep '^GIT_TYPE' \
            | sed 's|.*=||g' \
          )"
          # Branch name, Tag name or Commit Hash
          GIT_SLUG="$( \
            curl -sS https://raw.githubusercontent.com/cytopia/git-tools/master/git-info.sh \
            | sh \
            | grep '^GIT_NAME' \
            | sed 's|.*=||g' \
          )"
          # Docker Tag
          if [ "${GIT_TYPE}" = "BRANCH" ] && [ "${GIT_SLUG}" = "master" ]; then
            DOCKER_TAG_AWSKOPS="${VERSION}-awskops${KOPS}"
          else
            DOCKER_TAG_AWSKOPS="${VERSION}-awskops${KOPS}-${GIT_SLUG}"
          fi

          # Output
          echo "GIT_TYPE=${GIT_TYPE}"
          echo "GIT_SLUG=${GIT_SLUG}"
          echo "DOCKER_TAG_AWSKOPS=${DOCKER_TAG_AWSKOPS}"

          # Export variable
          # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#environment-files
          echo "GIT_TYPE=${GIT_TYPE}"                     >> ${GITHUB_ENV}
          echo "GIT_SLUG=${GIT_SLUG}"                     >> ${GITHUB_ENV}
          echo "DOCKER_TAG_AWSKOPS=${DOCKER_TAG_AWSKOPS}" >> ${GITHUB_ENV}
        env:
          KOPS: ${{ matrix.kops }}
          VERSION: ${{ matrix.version }}


      # ------------------------------------------------------------
      # Builder
      # ------------------------------------------------------------
      - name: Build Builder Image
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
          docker buildx create --use
          scripts/retry make _build_builder
        env:
          VERSION: ${{ matrix.version }}
          PLATFORM: ${{ matrix.platform }}


      # ------------------------------------------------------------
      # Base
      # ------------------------------------------------------------
      - name: Build Ansible Base
        run: |
          scripts/retry make build ANSIBLE=${VERSION} FLAVOUR=base
        env:
          VERSION: ${{ matrix.version }}
          PLATFORM: ${{ matrix.platform }}


      # ------------------------------------------------------------
      # Tools
      # ------------------------------------------------------------
      - name: Build Ansible Tools
        run: |
          scripts/retry make build ANSIBLE=${VERSION} FLAVOUR=tools
        env:
          VERSION: ${{ matrix.version }}
          PLATFORM: ${{ matrix.platform }}


      # ------------------------------------------------------------
      # AWS
      # ------------------------------------------------------------
      - name: Build Ansible AWS
        run: |
          scripts/retry make build ANSIBLE=${VERSION} FLAVOUR=aws
        env:
          VERSION: ${{ matrix.version }}
          PLATFORM: ${{ matrix.platform }}


      # ------------------------------------------------------------
      # AWS K8s
      # ------------------------------------------------------------
      - name: Build Ansible AWS K8s
        run: |
          scripts/retry make build ANSIBLE=${VERSION} FLAVOUR=awsk8s
        env:
          VERSION: ${{ matrix.version }}
          PLATFORM: ${{ matrix.platform }}


      # ------------------------------------------------------------
      # AWS Kops
      # ------------------------------------------------------------
      - name: Build Ansible AWS Kops
        run: |
          scripts/retry make build ANSIBLE=${VERSION} FLAVOUR=awskops KOPS=${KOPS}
        env:
          KOPS: ${{ matrix.kops }}
          VERSION: ${{ matrix.version }}
          PLATFORM: ${{ matrix.platform }}

      - name: Test Ansible AWS Kops
        run: |
          scripts/retry make test ANSIBLE=${VERSION} FLAVOUR=awskops KOPS=${KOPS}
        env:
          KOPS: ${{ matrix.kops }}
          VERSION: ${{ matrix.version }}
          PLATFORM: ${{ matrix.platform }}


      # ------------------------------------------------------------
      # Deploy
      # ------------------------------------------------------------
      - name: Publish images (only repo owner)
        run: |

          # Output
          echo "GIT_TYPE=${GIT_TYPE}"
          echo "GIT_SLUG=${GIT_SLUG}"
          echo "DOCKER_TAG_AWSKOPS=${DOCKER_TAG_AWSKOPS}"

          # Tag image
          scripts/retry make tag ANSIBLE=${VERSION} FLAVOUR=awskops KOPS=${KOPS} TAG=${DOCKER_TAG_AWSKOPS}
          docker images | grep cytopia/ansible

          # Login
          scripts/retry make login USERNAME=${{ secrets.DOCKERHUB_USERNAME }} PASSWORD=${{ secrets.DOCKERHUB_PASSWORD }}

          # Push
          scripts/retry make push TAG=${DOCKER_TAG_AWSKOPS}
        env:
          KOPS: ${{ matrix.kops }}
          VERSION: ${{ matrix.version }}
          PLATFORM: ${{ matrix.platform }}
        # https://help.github.com/en/github/automating-your-workflow-with-github-actions/contexts-and-expression-syntax-for-github-actions#functions
        if: github.event.pull_request.base.repo.id == github.event.pull_request.head.repo.id
            && (
              (github.event_name == 'schedule' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')))
              ||
              (github.event_name == 'push'     && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')))
              ||
              (github.event_name == 'push'     && startsWith(github.ref, 'refs/heads/release-'))
            )
