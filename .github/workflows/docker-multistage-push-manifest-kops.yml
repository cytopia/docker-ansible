---
name: Deploy multi-arch image manifests

on:
  workflow_call:
    ###
    ### Variables
    ###
    inputs:
      matrix:
        description: 'The version deploy matrix as JSON string ( list of objects: [{NAME, VERSION[], ARCH[]}] ).'
        required: true
        type: string
      versions:
        description: 'The build matrix set via params.yml.'
        required: true
        type: string
      stage:
        description: 'The stage to build (Examples: base, mods, prod or work).'
        required: true
        type: string
      can_deploy:
        description: 'Determines whether this workflow will also deploy (login and push).'
        required: true
        type: boolean
      has_refs:
        description: 'The ref build matrix as JSON string (list of git refs to build/deploy).'
        required: true
        type: boolean

    ###
    ### Secrets
    ###
    secrets:
      dockerhub_username:
        description: 'The username for Dockerhub.'
        required: false
      dockerhub_password:
        description: 'The password for Dockerhub.'
        required: false

jobs:
  # -----------------------------------------------------------------------------------------------
  # JOB (3/3): DEPLOY
  # -----------------------------------------------------------------------------------------------
  deploy:
    name: ${{ matrix.name }}-${{ matrix.version }}-${{ inputs.stage }}${{ matrix.kops }} ${{ matrix.refs }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(inputs.matrix) }}
    if: ${{ inputs.can_deploy }}
    steps:
      # ------------------------------------------------------------
      # Setup repository
      # ------------------------------------------------------------
      - name: "[SETUP] Checkout repository (current)"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        if: ${{ !inputs.has_refs }}

      - name: "[SETUP] Checkout repository (ref: ${{ matrix.refs }})"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ matrix.refs }}
        if: ${{ inputs.has_refs }}

      - name: "[SETUP] Setup QEMU environment"
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: "[SETUP] Determine Docker tag"
        id: tag
        uses: cytopia/docker-tag-action@v0.4.22

      - name: "[SETUP] Determine manifest arches"
        id: manifest
        run: |
          ARCHES="$( echo '${{ inputs.versions }}' \
            | jq 'group_by(.NAME, .VERSION, .KOPS, .ARCH)' \
            | jq 'map({NAME: .[].NAME, VERSION: .[].VERSION[], KOPS: .[].KOPS[], FLAVOUR: .[].FLAVOUR[], ARCHES: .[].ARCH|join(",")})' \
            | jq '.[] | select(.NAME=="${{ matrix.name }}" and .VERSION=="${{ matrix.version }}" and .KOPS=="${{ matrix.kops }}" and .FLAVOUR=="${{ matrix.flavour }}") | .ARCHES' \
            | jq -c -M \
          )"
          echo "arches=${ARCHES}" >> $GITHUB_OUTPUT
          echo "ARCHES: ${ARCHES}"


      # ------------------------------------------------------------
      # Login
      # ------------------------------------------------------------
      - name: "Login"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}


      # ------------------------------------------------------------
      # Create Manifest
      # ------------------------------------------------------------
      - name: "[Create Manifest] (${{ steps.manifest.outputs.arches }})"
        uses: cytopia/shell-command-retry-action@v0.1.5
        with:
          command: |
            make manifest-create VERSION=${{ matrix.version }} STAGE=${{ inputs.stage }} FLAVOUR=${{ matrix.flavour }} ARCHES=${{ steps.manifest.outputs.arches }} TAG=${{ steps.tag.outputs.docker-tag }} KOPS=${{ matrix.kops }}


      # ------------------------------------------------------------
      # Deploy Manifest
      # ------------------------------------------------------------
      - name: "[Push Manifest] ${{ steps.tag.outputs.docker-tag }}"
        uses: cytopia/shell-command-retry-action@v0.1.5
        with:
          command: |
            make manifest-push VERSION=${{ matrix.version }} STAGE=${{ inputs.stage }} FLAVOUR=${{ matrix.flavour }} TAG=${{ steps.tag.outputs.docker-tag }} KOPS=${{ matrix.kops }}
